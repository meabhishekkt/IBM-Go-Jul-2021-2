Methodology
    - No powerpoint
    - No pre-built code
    - Atleast 50% of participants should have completed the assignment to move on
    - Not for information sharing
    - Assignment will be tracked
    - You are expected to share your assignment solution online

Schedule
    commence    : 09:30 Hrs
    tea break   : 11:00 Hrs (15 mins)
    lunch break : 13:00 Hrs (1 Hr)
    tea break   : 15:30 Hrs (15 mins)
    windup      : 17:30 Hrs

About You
    Name
    Total Experience
    Primary Skillset
    Experience in Go (if any)
    Any interesting books you read recently / any interesting shows you watched

Golang
    Why?
    What is unique about Go?
        fast
        concurrency
        garbage collection

        compiled
        No VM (close to hardware)
        Memory management is taken care (by the garbage collector)

    Simplicity
        - No classes
        - No inheritance (ONLY composition)
        - No access modifiers
        - No exceptions (ONLY errors)

        - 25 keywords
            var, func, import, package, if, switch, for, fallthrough, continue, chan, go, select, range, make, new

    Built for concurrency
        - goroutines
        - 1000s of goroutines can be executed in one OS thread
        - scheduler is builtin in the runtime
        - language features for concurrency
            go, chan, select, range

    Close to hardware



Barry Shwartz
    The Paradox of Choice

obj.m1()

var t = new System.Threading.Thread(obj.m1)
t.Start()

go obj.m1()

Visual Studio Code (http://code.visualstudio.com)
    goland (jetbrains)

Code Organization
    Modules & Packages

To run a program
    go run program.go
    
    OR

    go build program.go
    ./program

    OR

    go build -o myapp program.go
    ./myapp

Data Types
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real float32, imaginary float32)
    complex128 (real float64, imaginary float64)

    byte (alias of uint8)
    rune (alias of int32) (represent an unicode character)
    

Go has support for higher order functions
    functions can be assigned to variables
    functions can be passed as arguments to other functions
    functions can be returned as return values from other functions

http://github.com/tkmagesh/app1

$GOPATH
    pkg
    bin
    src
        github.com
            tkmagesh
                app1
                    pkg1
                       import "github.com/tkmagesh/app1/pkg1" 
                    pkg2


To create a module
    go mod init <module name>

    package is just a folder

To install a third party package
    go get github.com/fatih/color

    to use
    import "github.com/fatih/color"


Collections
    Array
        - Fixed size
    Slice
        - Dynamic size
        - Uses an array
        
    Map

GRPC


Web
    IP
    TCP
    HTTP
    URL
    XML

Web Services
    SOAP (Simple Object Access Protocol)
    WSDL (Web Service Description Language)


Data As a Resource (REST)
    - What? -> URL
        http://myApp.com/products
        http://myApp.com/categories
        http://myApp.com/categories/Stationary
        http://myApp.com/categories/Stationary/Products

    - How? -> HTTP Verbs
        GET -> Retrieve
        POST -> Create
        PUT -> Update
        DELETE -> Delete
        PATCH -> Partial Update

    - Status of Request
        200 -> Success
        201 -> Created
        202 -> Accepted
        204 -> No Content
        302 -> Found
        301 -> Object Moved
        400 -> Bad Request
        401 -> Unauthorized
        403 -> Forbidden
        404 -> Not Found
        405 -> Method Not Allowed
        500 -> Internal Server Error

    - Response
        JSON

P101,Pen,10,1000,Stationary
P102,Pencil,5,500,Stationary

59
xml = 350
json = 217


.NET -> .NET
    binary format
    TCP
        stateful connections
            realtime updates
            bidirectional communication


HTTP 
    stateless protocol
    text based

Microservices

GRPC
    http/2.0
        binary format
        sticky connections
        bidirectional communication

    communication patterns
        request/response
        client streaming
        server streaming
        bidirectional streaming

    protocol buffers
        binary format

        data description
        service description

    tools
        generate stubs & proxies

        go get -u github.com/golang/protobuf/protoc-gen-go (go 1.15)

        OR

        go install google.golang.org/grpc/cmd/protoc-gen-grpc-go@latest (go 1.16)

        OR
        
        brew install protobuf
        brew install protoc-gen-go



